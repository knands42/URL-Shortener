// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/shorten": {
            "post": {
                "description": "Generate a short URL from the input URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URL"
                ],
                "summary": "Generate a short URL",
                "parameters": [
                    {
                        "description": "Input URL",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.GenerateShortURLRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.GenerateShortURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BadRequestErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.ConflictErrorResponse"
                        }
                    }
                }
            }
        },
        "/url": {
            "get": {
                "description": "Get the original url from the shortened url and redirect to it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URL"
                ],
                "summary": "Get a URL entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "URL to get metadata for",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.NotFoundErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a URL entry by providing either the original URL or the short URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URL"
                ],
                "summary": "Delete a URL entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "URL to be deleted",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of URL to be deleted (short_url or original_url)",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.NotFoundErrorResponse"
                        }
                    }
                }
            }
        },
        "/url/metadata": {
            "get": {
                "description": "Get information about any URL entry by providing the original URL or the shortened URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URL"
                ],
                "summary": "Get a URL entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "URL to get metadata for",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of URL (short_url or original_url)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetMetadataResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.NotFoundErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.GenerateShortURLRequest": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "string",
                    "example": "https://www.google.com"
                }
            }
        },
        "handler.GenerateShortURLResponse": {
            "type": "object",
            "properties": {
                "short_url": {
                    "type": "string",
                    "example": "https://me.li/abc123"
                }
            }
        },
        "handler.GetMetadataResponse": {
            "type": "object",
            "properties": {
                "number_of_access": {
                    "type": "integer"
                },
                "original_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        },
        "utils.BadRequestErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Bad request"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "utils.ConflictErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Conflict"
                },
                "status": {
                    "type": "integer",
                    "example": 409
                }
            }
        },
        "utils.NotFoundErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "URL not found"
                },
                "status": {
                    "type": "integer",
                    "example": 404
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3333",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Url Shortener API",
	Description:      "This is a sample server for a URL Shortener API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
